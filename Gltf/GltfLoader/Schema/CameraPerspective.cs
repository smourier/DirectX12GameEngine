//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GltfLoader.Schema
{
    using System.Linq;
    using System.Runtime.Serialization;
    
    
    public class CameraPerspective
    {
        
        /// <summary>
        /// Backing field for Aspectratio.
        /// </summary>
        private System.Nullable<float> _aspectratio;
        
        /// <summary>
        /// Backing field for Yfov.
        /// </summary>
        private float _yfov;
        
        /// <summary>
        /// Backing field for Zfar.
        /// </summary>
        private System.Nullable<float> _zfar;
        
        /// <summary>
        /// Backing field for Znear.
        /// </summary>
        private float _znear;
        
        /// <summary>
        /// Backing field for Extensions.
        /// </summary>
        private System.Collections.Generic.Dictionary<string, object> _extensions;
        
        /// <summary>
        /// Backing field for Extras.
        /// </summary>
        private Extras _extras;
        
        /// <summary>
        /// The floating-point aspect ratio of the field of view.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("aspectRatio")]
        public System.Nullable<float> Aspectratio
        {
            get
            {
                return this._aspectratio;
            }
            set
            {
                if ((value <= 0F))
                {
                    throw new System.ArgumentOutOfRangeException("Aspectratio", value, "Expected value to be greater than 0");
                }
                this._aspectratio = value;
            }
        }
        
        /// <summary>
        /// The floating-point vertical field of view in radians.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("yfov")]
        public float Yfov
        {
            get
            {
                return this._yfov;
            }
            set
            {
                if ((value <= 0F))
                {
                    throw new System.ArgumentOutOfRangeException("Yfov", value, "Expected value to be greater than 0");
                }
                this._yfov = value;
            }
        }
        
        /// <summary>
        /// The floating-point distance to the far clipping plane.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zfar")]
        public System.Nullable<float> Zfar
        {
            get
            {
                return this._zfar;
            }
            set
            {
                if ((value <= 0F))
                {
                    throw new System.ArgumentOutOfRangeException("Zfar", value, "Expected value to be greater than 0");
                }
                this._zfar = value;
            }
        }
        
        /// <summary>
        /// The floating-point distance to the near clipping plane.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("znear")]
        public float Znear
        {
            get
            {
                return this._znear;
            }
            set
            {
                if ((value <= 0F))
                {
                    throw new System.ArgumentOutOfRangeException("Znear", value, "Expected value to be greater than 0");
                }
                this._znear = value;
            }
        }
        
        /// <summary>
        /// Dictionary object with extension-specific objects.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extensions")]
        public System.Collections.Generic.Dictionary<string, object> Extensions
        {
            get
            {
                return this._extensions;
            }
            set
            {
                this._extensions = value;
            }
        }
        
        /// <summary>
        /// Application-specific data.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extras")]
        public Extras Extras
        {
            get
            {
                return this._extras;
            }
            set
            {
                this._extras = value;
            }
        }
        
        public bool ShouldSerializeAspectratio()
        {
            return ((_aspectratio == null) 
                        == false);
        }
        
        public bool ShouldSerializeZfar()
        {
            return ((_zfar == null) 
                        == false);
        }
        
        public bool ShouldSerializeExtensions()
        {
            return ((_extensions == null) 
                        == false);
        }
        
        public bool ShouldSerializeExtras()
        {
            return ((_extras == null) 
                        == false);
        }
    }
}
