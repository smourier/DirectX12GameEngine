//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GltfLoader.Schema
{
    using System.Linq;
    using System.Runtime.Serialization;
    
    
    public class AnimationSampler
    {
        
        /// <summary>
        /// Backing field for Input.
        /// </summary>
        private int _input;
        
        /// <summary>
        /// Backing field for Interpolation.
        /// </summary>
        private GltfInterpolation _interpolation = GltfInterpolation.Linear;
        
        /// <summary>
        /// Backing field for Output.
        /// </summary>
        private int _output;
        
        /// <summary>
        /// Backing field for Extensions.
        /// </summary>
        private System.Collections.Generic.Dictionary<string, object> _extensions;
        
        /// <summary>
        /// Backing field for Extras.
        /// </summary>
        private Extras _extras;
        
        /// <summary>
        /// The index of an accessor containing keyframe input values, e.g., time.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("input")]
        public int Input
        {
            get
            {
                return this._input;
            }
            set
            {
                if ((value < 0F))
                {
                    throw new System.ArgumentOutOfRangeException("Input", value, "Expected value to be greater than or equal to 0");
                }
                this._input = value;
            }
        }
        
        /// <summary>
        /// Interpolation algorithm.
        /// </summary>
        [System.Text.Json.Serialization.JsonConverterAttribute(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("interpolation")]
        public GltfInterpolation Interpolation
        {
            get
            {
                return this._interpolation;
            }
            set
            {
                this._interpolation = value;
            }
        }
        
        /// <summary>
        /// The index of an accessor, containing keyframe output values.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("output")]
        public int Output
        {
            get
            {
                return this._output;
            }
            set
            {
                if ((value < 0F))
                {
                    throw new System.ArgumentOutOfRangeException("Output", value, "Expected value to be greater than or equal to 0");
                }
                this._output = value;
            }
        }
        
        /// <summary>
        /// Dictionary object with extension-specific objects.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extensions")]
        public System.Collections.Generic.Dictionary<string, object> Extensions
        {
            get
            {
                return this._extensions;
            }
            set
            {
                this._extensions = value;
            }
        }
        
        /// <summary>
        /// Application-specific data.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extras")]
        public Extras Extras
        {
            get
            {
                return this._extras;
            }
            set
            {
                this._extras = value;
            }
        }
        
        public bool ShouldSerializeInterpolation()
        {
            return ((_interpolation == GltfInterpolation.Linear) 
                        == false);
        }
        
        public bool ShouldSerializeExtensions()
        {
            return ((_extensions == null) 
                        == false);
        }
        
        public bool ShouldSerializeExtras()
        {
            return ((_extras == null) 
                        == false);
        }
        
        public enum GltfInterpolation
        {
            
            Linear,
            
            Step,
            
            Cubicspline,
        }
    }
}
